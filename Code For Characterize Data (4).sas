
LIBNAME TMP00001 "C:\Users\wfd14\Box\1 Healing Communities\DATA_NYS\Data and Documentation\DATA Downloads\1 1 Pending";

/* -------------------------------------------------------------------
   Code generated by SAS Task

   Generated on: Sunday, March 28, 2021 at 10:21:35 PM
   By task: Characterize Data (4)

   Input Data: C:\Users\panyue\Box\1 Healing Communities\DATA_NYS\Data and Documentation\DATA Downloads\1 1 Pending\_07_nysdoh_vrmo_20210315.sas7bdat
   Server:  Local
   ------------------------------------------------------------------- */

%_eg_conditional_dropds(WORK.FREQCharFrequencyFor_07_nysdoh_v,
		WORK.UNIVCharUnivariateFor_07_nysdoh_,
		WORK.TTAFTempTableAccumFreq,
		WORK.TTAUTempTableAccumUniv,
		WORK.TCONTempTableContents,
		WORK.TPFRTempTableFrequencies2,
		WORK.TPUNTempTableUnivariate2,
		WORK.TSPUTempTableUnivariate3,
		WORK.TFFRTempFormatFreqs);
%MACRO REPORTS; 
%IF &charVarsFlag = 1 %THEN 
  %DO; 
OPTIONS MISSING=' ' PAGENO=1; 

TITLE;
TITLE1 "Summary of Categorical Variables for &LIB..&DSN.";
TITLE2 "Limited to the &CATOBS. Most Frequent Distinct Values per Variable";
FOOTNOTE;
FOOTNOTE1 "Generated by the SAS System (&_SASSERVERNAME, &SYSSCPL) on %TRIM(%QSYSFUNC(DATE(), NLDATE20.)) at %TRIM(%SYSFUNC(TIME(), TIMEAMPM12.))";
PROC PRINT DATA=WORK.TTAFTempTableAccumFreq LABEL; 
	BY Variable Label; 
	ID Variable Label; 
	VAR Value Count Percent; 
	FORMAT Label; 
	; 
RUN; 

  %END; 
%ELSE 
  %DO; 
OPTIONS MISSING=' ' PAGENO=1; 

TITLE;
TITLE1 "Summary of Categorical Variables for &LIB..&DSN.";
TITLE2 "Limited to the &CATOBS. Most Frequent Distinct Values per Variable";
FOOTNOTE; 
DATA _NULL_; 
	FILE PRINT; 
	PUT /// "'NO CHARACTER VARIABLES WERE FOUND IN THE INPUT DATA'"; 
  STOP; 
RUN; 
  %END; 

%IF &numVarsFlag = 1 %THEN 
  %DO; 
/* -------------------------------------------------------------------
   Determine which date, time, datetime and
currency formats are most frequently associated
with variables in the input data set.  Those 
formats will then be used to display the date,
time, datetime and currency variable values in
their respective summary reports.
   ------------------------------------------------------------------- */
PROC FREQ DATA=WORK.TTAUTempTableAccumUniv NOPRINT; 
	TABLES FORMAT / OUT=WORK.TFFRTempFormatFreqs; 
RUN; 

PROC SORT DATA=WORK.TFFRTempFormatFreqs; 
	BY DESCENDING COUNT; 
RUN; 

%LET _EG_DATE_FMT=DATE; 
%LET _EG_TIME_FMT=TIME; 
%LET _EG_DATETIME_FMT=DATETIME; 
%LET _EG_CURRENCY_FMT=DOLLAR; 
DATA _NULL_; 
	RETAIN dateFound timeFound datetimeFound currencyFound 0; 
	SET WORK.TFFRTempFormatFreqs; 
	IF FORMAT IN ("YYQ", "YYQC", "YYQD", "YYQN", "YYQP", "YYQS", 
			"YYQR", "YYQRC", "YYQRD", "YYQRN", "YYQRP", "YYQRS", 
			"MMYY", "MMYYC", "MMYYD", "MMYYN", "MMYYP", "MMYYS", 
			"YYMM", "YYMMC", "YYMMD", "YYMMN", "YYMMP", "YYMMS", 
			"DDMMYY", "DDMMYYB", "DDMMYYC", "DDMMYYD", "DDMMYYN", "DDMMYYP", "DDMMYYS", 
			"MMDDYY", "MMDDYYB", "MMDDYYC", "MMDDYYD", "MMDDYYN", "MMDDYYP", "MMDDYYS", 
			"YYMMDD", "YYMMDDB", "YYMMDDC", "YYMMDDD", "YYMMDDN", "YYMMDDP", "YYMMDDS", 
			"DATE", "HEBDATE", "HDATE", "MINGUO", "YYMON", "NENGO", "DAY", 
			"DOWNAME", "EURDFDN", "EURDFDWN", "EURDFMN", "EURDFWDX", "EURDFWKX", "MONNAME", 
			"MONTH", "NLDATEMN", "NLDATEW", "NLDATWN", "QTR", "QTRR", "WEEKDATE", "WEEKDATX", 
			"WEEKDAY", "WEEKU", "WEEKV", "WEEKW", "WORDDATE", "WORDDATX", "YEAR", 
			"EURDFDE", "EURDFDD", "EURDFMY", "NLDATE", "MONYY", "JULDAY", "JULIAN") THEN 
	  DO; 
		IF dateFound = 0 THEN 
		  DO; 
			CALL SYMPUT("_EG_DATE_FMT", TRIM(FORMAT)); 
			dateFound = 1; 
		  END; 

		RETURN; 
	  END; 

	IF FORMAT IN ("HHMM", "HOUR", "NLTIMAP", "NLTIME", "TIME", "TIMEAMPM", 
			"MMSS", "MMSSC", "MMSSD", "MMSSN", "MMSSP", "MMSSS", "TOD") THEN 
	  DO; 
		IF timeFound = 0 THEN 
		  DO; 
			CALL SYMPUT("_EG_TIME_FMT", TRIM(FORMAT)); 
			timeFound = 1; 
		  END; 

		RETURN; 
	  END; 

	IF FORMAT IN ("DATETIME", "EURDFDT", "DTYYQC", "DATEAMPM", "DTDATE", 
			"DTYYQC", "NLDATMW", "NLDATM", "NLDATMAP", "NLDATMTM", 
			"NLTIMAP", "DTMONYY", "DTWKDATX", "DTYEAR") THEN 
	  DO; 
		IF datetimeFound = 0 THEN 
		  DO; 
			CALL SYMPUT("_EG_DATETIME_FMT", TRIM(FORMAT)); 
			datetimeFound = 1; 
		  END; 

		RETURN; 
	  END; 

	IF FORMAT IN ("DOLLAR", "DOLLARX", "EURO", "EUROX", "NLMNY", "NLMNYI", "YEN") OR 
			SUBSTR(FORMAT, 1, 5) = "EURFR"  OR  SUBSTR(FORMAT, 1, 5) = "EURTO"   THEN 
	  DO; 
		IF currencyFound = 0 THEN 
		  DO; 
			CALL SYMPUT("_EG_CURRENCY_FMT", TRIM(FORMAT)); 
			currencyFound = 1; 
		  END; 

		RETURN; 
	  END; 

RUN; 

PROC SORT DATA=WORK.TTAUTempTableAccumUniv; 
	BY variable label; 
RUN; 

TITLE;
TITLE1 "Summary of Numeric Variables for &LIB..&DSN.";
FOOTNOTE;
FOOTNOTE1 "Generated by the SAS System (&_SASSERVERNAME, &SYSSCPL) on %TRIM(%QSYSFUNC(DATE(), NLDATE20.)) at %TRIM(%SYSFUNC(TIME(), TIMEAMPM12.))";
PROC PRINT DATA=WORK.TTAUTempTableAccumUniv; 
	WHERE format NOT IN ("DOLLAR", "DOLLARX", "EURO", "EUROX", "NLMNY", "NLMNYI", "YEN", 
			"YYQ", "YYQC", "YYQD", "YYQN", "YYQP", "YYQS", 
			"YYQR", "YYQRC", "YYQRD", "YYQRN", "YYQRP", "YYQRS", 
			"MMYY", "MMYYC", "MMYYD", "MMYYN", "MMYYP", "MMYYS", 
			"YYMM", "YYMMC", "YYMMD", "YYMMN", "YYMMP", "YYMMS", 
			"DDMMYY", "DDMMYYB", "DDMMYYC", "DDMMYYD", "DDMMYYN", "DDMMYYP", "DDMMYYS", 
			"MMDDYY", "MMDDYYB", "MMDDYYC", "MMDDYYD", "MMDDYYN", "MMDDYYP", "MMDDYYS", 
			"YYMMDD", "YYMMDDB", "YYMMDDC", "YYMMDDD", "YYMMDDN", "YYMMDDP", "YYMMDDS", 
			"DATE", "HEBDATE", "HDATE", "MINGUO", "YYMON", "NENGO", "DAY", 
			"DOWNAME", "EURDFDN", "EURDFDWN", "EURDFMN", "EURDFWDX", "EURDFWKX", "MONNAME", 
			"MONTH", "NLDATEMN", "NLDATEW", "NLDATWN", "QTR", "QTRR", "WEEKDATE", "WEEKDATX", 
			"WEEKDAY", "WEEKU", "WEEKV", "WEEKW", "WORDDATE", "WORDDATX", "YEAR", 
			"EURDFDE", "EURDFDD", "EURDFMY", "NLDATE", "MONYY", "JULDAY", "JULIAN", 
			"HHMM", "HOUR", "NLTIMAP", "NLTIME", "TIME", "TIMEAMPM", 
			"MMSS", "MMSSC", "MMSSD", "MMSSN", "MMSSP", "MMSSS", "TOD", 
			"DATETIME", "EURDFDT", "DTYYQC", "DATEAMPM", "DTDATE", 
			"DTYYQC", "NLDATMW", "NLDATM", "NLDATMAP", "NLDATMTM", 
			"NLTIMAP", "DTMONYY", "DTWKDATX", "DTYEAR") AND 
			FORMAT NOT LIKE "EURFR%" AND FORMAT NOT LIKE "EURTO%"; 
	BY variable label; 
	ID variable label; 
	VAR n nmiss total min mean median max stdmean; 
	FORMAT Label; 
RUN; 

TITLE;
TITLE1 "Summary of Currency Variables for &LIB..&DSN.";
PROC PRINT DATA=WORK.TTAUTempTableAccumUniv; 
	WHERE format IN ("DOLLAR", "DOLLARX", "EURO", "EUROX", "NLMNY", "NLMNYI", "YEN") OR 
			FORMAT LIKE "EURFR%" OR FORMAT LIKE "EURTO%"; 
	BY variable label; 
	ID variable label; 
	VAR n nmiss total min mean median max stdmean; 
	FORMAT total mean stdmean min median max &_EG_CURRENCY_FMT.16.2; 
	FORMAT Label; 
RUN; 

TITLE;
TITLE1 "Summary of Date Variables for &LIB..&DSN.";
PROC PRINT DATA=WORK.TTAUTempTableAccumUniv; 
	WHERE format IN ("YYQ", "YYQC", "YYQD", "YYQN", "YYQP", "YYQS", 
			"YYQR", "YYQRC", "YYQRD", "YYQRN", "YYQRP", "YYQRS", 
			"MMYY", "MMYYC", "MMYYD", "MMYYN", "MMYYP", "MMYYS", 
			"YYMM", "YYMMC", "YYMMD", "YYMMN", "YYMMP", "YYMMS", 
			"DDMMYY", "DDMMYYB", "DDMMYYC", "DDMMYYD", "DDMMYYN", "DDMMYYP", "DDMMYYS", 
			"MMDDYY", "MMDDYYB", "MMDDYYC", "MMDDYYD", "MMDDYYN", "MMDDYYP", "MMDDYYS", 
			"YYMMDD", "YYMMDDB", "YYMMDDC", "YYMMDDD", "YYMMDDN", "YYMMDDP", "YYMMDDS", 
			"DATE", "HEBDATE", "HDATE", "MINGUO", "YYMON", "NENGO", "DAY", 
			"DOWNAME", "EURDFDN", "EURDFDWN", "EURDFMN", "EURDFWDX", "EURDFWKX", "MONNAME", 
			"MONTH", "NLDATEMN", "NLDATEW", "NLDATWN", "QTR", "QTRR", "WEEKDATE", "WEEKDATX", 
			"WEEKDAY", "WEEKU", "WEEKV", "WEEKW", "WORDDATE", "WORDDATX", "YEAR", 
			"EURDFDE", "EURDFDD", "EURDFMY", "NLDATE", "MONYY", "JULDAY", "JULIAN"); 
	BY variable label; 
	ID variable label; 
	VAR n nmiss min mean median max; 
	FORMAT min mean median max &_EG_DATE_FMT..; 
	FORMAT Label; 
RUN; 

TITLE;
TITLE1 "Summary of Time Variables for &LIB..&DSN.";
PROC PRINT DATA=WORK.TTAUTempTableAccumUniv; 
	WHERE format IN ("HHMM", "HOUR", "NLTIMAP", "NLTIME", "TIME", "TIMEAMPM", 
			"MMSS", "MMSSC", "MMSSD", "MMSSN", "MMSSP", "MMSSS", "TOD"); 
	BY variable label; 
	ID variable label; 
	VAR n nmiss min mean median max; 
	FORMAT min mean median max &_EG_TIME_FMT..; 
	FORMAT Label; 
RUN; 

TITLE;
TITLE1 "Summary of Datetime Variables for &LIB..&DSN.";
PROC PRINT DATA=WORK.TTAUTempTableAccumUniv; 
	WHERE format IN ("DATETIME", "EURDFDT", "DTYYQC", "DATEAMPM", "DTDATE", 
			"DTYYQC", "NLDATMW", "NLDATM", "NLDATMAP", "NLDATMTM", 
			"NLTIMAP", "DTMONYY", "DTWKDATX", "DTYEAR"); 
	BY variable label; 
	ID variable label; 
	VAR n nmiss min mean median max; 
	FORMAT min mean median max &_EG_DATETIME_FMT..; 
	FORMAT Label; 
RUN; 
  %END; 
%ELSE 
  %DO; 
TITLE;
TITLE1 "Summary of Numeric Variables for &LIB..&DSN.";
FOOTNOTE; 
DATA _NULL_; 
	FILE PRINT; 
	PUT /// "'NO NUMERIC VARIABLES WERE FOUND IN THE INPUT DATA'"; 
  STOP; 
RUN; 
  %END; 
%MEND REPORTS; 

%MACRO CHARTS; 
%IF &charVarsFlag = 1 %THEN 
  %DO; 
PROC SORT 
	DATA=WORK.TTAFTempTableAccumFreq; 
	BY Variable; 
RUN; 

TITLE;
TITLE1 "Categorical Variable Value Counts for &LIB..&DSN.";

PROC SGPLOT DATA=WORK.TTAFTempTableAccumFreq NOAUTOLEGEND; 
	YAXIS FITPOLICY=THIN; 
	HBAR value / 
	STAT=SUM 
	RESPONSE=COUNT 
	GROUP=value 
	; 
	BY Variable; 
	RUN; QUIT; 

  %END; 

%IF &numVarsFlag = 1 %THEN 
  %DO; 
PROC SORT DATA=WORK.TTAUTempTableAccumUniv; 
	BY Variable; 
RUN; 

DATA _NULL_; 
	CALL SYMPUT('numVarCount', PUT(numObs, 12.)); 
	STOP; 
	SET WORK.TTAUTempTableAccumUniv NOBS=numObs; 
RUN; 
    %DO obsNumber = 1 %TO &numVarCount.; 
/* -------------------------------------------------------------------
   We need to determine the SAS format associated
with the current variable so that we can format 
the means and median values appropriately for 
use in the charts' footnotes.
   ------------------------------------------------------------------- */
DATA _NULL_; 
	pointer = &obsNumber; 
	SET WORK.TTAUTempTableAccumUniv POINT=pointer; 
	dsid=OPEN("&data", "i"); 
	IF dsid > 0 THEN 
	  DO; 
		varno = VARNUM(dsid, Variable); 
		format = " "; 
		IF varno > 0 THEN 
			format = VARFMT(dsid, varno); 
		IF format NE " " THEN 
			CALL SYMPUT("_EG_VAR_FMT", format); 
		ELSE 
			CALL SYMPUT("_EG_VAR_FMT", "BEST12."); 
		rc = CLOSE(dsid); 
	  END; 
	ELSE 
		CALL SYMPUT("_EG_VAR_FMT", "BEST12."); 
	STOP; 
RUN; 

DATA _NULL_; 
	pointer = &obsNumber; 
	SET WORK.TTAUTempTableAccumUniv POINT=pointer; 
	CALL SYMPUT('var', QUOTE(TRIM(Variable))); 
	CALL SYMPUT('var_n', QUOTE(TRIM(Variable)) || "n"); 
	CALL SYMPUT('mean', TRIM(PUT(mean, &_EG_VAR_FMT))); 
	CALL SYMPUT('median', TRIM(PUT(median, &_EG_VAR_FMT))); 
	STOP; 
RUN; 

TITLE;
TITLE1 "Numeric Variable Values for &LIB..&DSN.";
FOOTNOTE; 
FOOTNOTE1 'Mean = ' "&mean."; 
FOOTNOTE2 'Median = ' "&median."; 
FOOTNOTE3 ' '; 

PROC SGPLOT DATA=&data. NOAUTOLEGEND; 
	XAXIS FITPOLICY=THIN; 
	VBAR &var_n. / 
	STAT=FREQ 
	GROUP=&var_n. 
	; 
	RUN; QUIT; 

	   %END; 
  %END; 
%MEND CHARTS; 

/* -------------------------------------------------------------------
   Define the variables in the output data sets so that they
will exist when PROC APPEND uses them as the BASE data set.
   ------------------------------------------------------------------- */
DATA WORK.FREQCharFrequencyFor_07_nysdoh_v(LABEL="Frequency Counts for TMP00001._07_nysdoh_vrmo_20210315");  
	LENGTH DataSet $ 41 Variable $32 Label $ 256 Format $ 31 Value $ 32 Count Percent 8;  
	LABEL Count='Frequency Count' Percent='Percent of Total Frequency';  
	RETAIN DataSet Variable Label Format Value ' ' Count Percent 0;  
	STOP;  
RUN;  

DATA WORK.UNIVCharUnivariateFor_07_nysdoh_(LABEL="Univariate Statistics for TMP00001._07_nysdoh_vrmo_20210315");  
	LENGTH DataSet $ 41 Variable $32 Label $ 256 Format $ 31 N NMiss Total Min Mean Median Max StdMean 8;  
	RETAIN DataSet Variable Label Format ' ' N NMiss Total Min Mean Median Max StdMean 0;  
	STOP;	 
RUN; 

%global dataset obs; 

%MACRO _EG_CHARACT(data, lib, dsn, catobs);  

/* -------------------------------------------------------------------
   Define the variables in the work accumulation data sets
and clear them out so that we can record the statistics for
the current data set.
   ------------------------------------------------------------------- */
DATA WORK.TTAFTempTableAccumFreq;  
	LENGTH DataSet $ 41 Variable $32 Label $ 256 Format $ 31 Value $ 32 Count Percent 8;  
	LABEL Count='Frequency Count' Percent='Percent of Total Frequency';  
	RETAIN DataSet Variable Label Format Value ' ' Count Percent 0;  
	STOP;  
RUN;  

DATA WORK.TTAUTempTableAccumUniv;  
	LENGTH DataSet $ 41 Variable $32 Label $ 256 Format $ 31 N NMiss Total Min Mean Median Max StdMean 8;  
	RETAIN DataSet Variable Label Format ' ' N NMiss Total Min Mean Median Max StdMean 0;  
	STOP;	 
RUN; 

/* -------------------------------------------------------------------
   Get all the variable information for the input data set.
   ------------------------------------------------------------------- */
PROC CONTENTS 
	DATA=&data. 
	OUT=WORK.TCONTempTableContents  
	NOPRINT; 
RUN;  

/* -------------------------------------------------------------------
   Get the number of variables in the input data set.
   ------------------------------------------------------------------- */
DATA _NULL_; 
	CALL SYMPUT('numobs',PUT(numobs, 12.)); 
/* -------------------------------------------------------------------
   There is no need to actually read any observations. We
are only interested in the observation count.
   ------------------------------------------------------------------- */
	STOP; 
	SET WORK.TCONTempTableContents NOBS=numobs; 
RUN; 

/* -------------------------------------------------------------------
   Each time the macro is executed the macro variable
type flags have to be initialized. They are used by
the graphing, reporting and output data set generation
code to determine if data exists to be processed.
   ------------------------------------------------------------------- */
%LET charVarsFlag = 0; 
%LET numVarsFlag = 0; 
/* -------------------------------------------------------------------
   Loop for each variable in the input data set and 
depending on its type (character or numeric) gather 
the relevant statistics for its values.
   ------------------------------------------------------------------- */
%DO i=1 %to &numobs.; 
/* -------------------------------------------------------------------
   Create macro variables to provide information about
the current variable to subsequent DATA and PROC
steps.
   ------------------------------------------------------------------- */
	DATA _NULL_; 
		POINTER=&i.; 
		SET WORK.TCONTempTableContents point=pointer; 
		CALL SYMPUT('var', QUOTE(name)); 
		CALL SYMPUT('var_n', QUOTE(name) || "n"); 
		CALL SYMPUT('type', PUT(type, 1.)); 
		CALL SYMPUT('label', label); 
		CALL SYMPUT('format', format); 
		STOP; 
	RUN; 

/* -------------------------------------------------------------------
   Process the variable if it is numeric.
   ------------------------------------------------------------------- */
	%IF &type.=1 %THEN %DO; 
/* -------------------------------------------------------------------
   Set the macro variable flag to indicate that the
input data set contains at least one numeric
variable.
   ------------------------------------------------------------------- */
		%LET numVarsFlag = 1; 
/* -------------------------------------------------------------------
   Get the statistics for the numeric variable.
   ------------------------------------------------------------------- */
		PROC UNIVARIATE DATA=&data. NOPRINT; 
			VAR &var_n.; 
			OUTPUT  
				OUT=WORK.TPUNTempTableUnivariate2  
				N=N  
				NMISS=NMiss  
				MEAN=Mean  
				MIN=Min  
				MAX=Max  
				MEDIAN=Median  
				STDMEAN=StdMean  
				SUM=Total; 
		RUN; 

/* -------------------------------------------------------------------
   Append the statistics for the numeric variable
to the data set used to accumulate information
about numeric variables in the current data
set.
   ------------------------------------------------------------------- */
		DATA WORK.TTAUTempTableAccumUniv; 
			SET WORK.TTAUTempTableAccumUniv WORK.TPUNTempTableUnivariate2(IN=intemp); 

			IF intemp = 1 THEN DO; 
				Variable=&var.; 
				Label="%nrbquote(&label.)"; 
				DataSet="&lib..&dsn."; 
				Format="&FORMAT."; 
			END; 
		RUN; 
	%END; 

/* -------------------------------------------------------------------
   Process the variable if it is character.
   ------------------------------------------------------------------- */
	%ELSE %DO; 
/* -------------------------------------------------------------------
   Set the macro variable flag to indicate that the
input data set contains at least one
character variable.
   ------------------------------------------------------------------- */
		%LET charVarsFlag = 1; 
/* -------------------------------------------------------------------
   Get the frequency statistics for the values
within the character variable.
   ------------------------------------------------------------------- */
		PROC FREQ DATA=&data. NOPRINT; 
			TABLES &var_n./MISSING OUT=WORK.TPFRTempTableFrequencies2; 
		RUN; 

/* -------------------------------------------------------------------
   Append the value frequency counts for the
character variable to the data set used to
accumulate information about all the character
variables in the current data set.
   ------------------------------------------------------------------- */
		DATA WORK.TTAFTempTableAccumFreq; 
			DROP InVar; 
			LENGTH Value $ 32; 
			SET WORK.TTAFTempTableAccumFreq 
			    WORK.TPFRTempTableFrequencies2(IN=intemp RENAME=(&var_n.=InVar)); 

			IF intemp = 1THEN DO; 
				Value=InVar; 
				Variable=&var.; 
				Label="%nrbquote(&label.)"; 
				DataSet="&lib..&dsn."; 
				Format="&FORMAT."; 
			END; 
		RUN; 
	%END; 
%END; 

/* -------------------------------------------------------------------
   Character data requires some additional
processing.
   ------------------------------------------------------------------- */
%IF &charVarsFlag = 1 %THEN 
  %DO; 
/* -------------------------------------------------------------------
   Sort the accumulated character variable
information by name and value frequency count.
   ------------------------------------------------------------------- */
PROC SORT DATA=WORK.TTAFTempTableAccumFreq; 
	WHERE dataset NE ' '; 
	BY variable label descending count; 
RUN; 

/* -------------------------------------------------------------------
   Provide a label for missing values and if
the number of categorical values reported 
needs to be limited, then all categorical 
values' frequencies are accumulated into an
additional "all others" item.
   ------------------------------------------------------------------- */
DATA WORK.TTAFTempTableAccumFreq; 
	DROP i newcount newperc; 
	RETAIN i newcount newperc 0; 
	SET WORK.TTAFTempTableAccumFreq; 
	BY variable; 
	IF value=' ' THEN 
		value='***Missing***'; 
  %IF %EVAL(&catobs.) NE -1 %THEN 
    %DO; 
	IF FIRST.variable = 1 THEN 
		i=1; 
	ELSE 
		i=i+1; 
	IF i > %EVAL(&catobs.) THEN DO; 
		newcount=newcount+count; 
		newperc=newperc+percent; 
	END; 
	IF i > %EVAL(&catobs.) AND LAST.variable = 0 THEN 
		DELETE; 
	IF LAST.variable & i > %EVAL(&catobs.) THEN DO; 
		value='***All other values***'; 
		count=newcount; 
		percent=newperc; 
		newcount=0; 
		newperc=0; 
	END; 
    %END; 
RUN; 
  %END; 

/* -------------------------------------------------------------------
   Calls the macro to generate the summary reports.
   ------------------------------------------------------------------- */
%REPORTS 

/* -------------------------------------------------------------------
   Calls the macro to generate the graphs.
   ------------------------------------------------------------------- */
%CHARTS 

/* -------------------------------------------------------------------
   Create the output data sets.
   ------------------------------------------------------------------- */
%IF &charVarsFlag = 1 %THEN 
  %DO; 
PROC APPEND BASE=WORK.FREQCharFrequencyFor_07_nysdoh_v DATA=WORK.TTAFTempTableAccumFreq FORCE; 
RUN; 
  %END; 

%IF &numVarsFlag = 1 %THEN 
  %DO; 
PROC APPEND BASE=WORK.UNIVCharUnivariateFor_07_nysdoh_ DATA=WORK.TTAUTempTableAccumUniv FORCE; 
RUN; 
  %END; 

%MEND _EG_CHARACT; 

%_EG_CHARACT(TMP00001._07_nysdoh_vrmo_20210315, TMP00001, _07_nysdoh_vrmo_20210315, 30); 
/* -------------------------------------------------------------------
   End of task code
   ------------------------------------------------------------------- */
RUN; QUIT;
%_eg_conditional_dropds(WORK.TTAFTempTableAccumFreq,
		WORK.TTAUTempTableAccumUniv,
		WORK.TCONTempTableContents,
		WORK.TPFRTempTableFrequencies2,
		WORK.TPUNTempTableUnivariate2,
		WORK.TSPUTempTableUnivariate3,
		WORK.TFFRTempFormatFreqs);
TITLE; FOOTNOTE;


